C51 COMPILER V6.02  I2C_TEST                                                               12/14/2015 14:50:20 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE I2C_TEST
OBJECT MODULE PLACED IN .\I2C_test.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\I2C_test.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include "stdio.h"
   2          #include "main.h"
   3          #include "PORT.H"
   4          #include "UART.h"
   5          #include "print_bytes.h"
   6          #include "SPI.h"
   7          #include "SDcard.h"
   8          #include "Long_Serial_In.h"
   9          #include "Directory_Functions_struct.h"
  10          #include "File_System.h"
  11          #include "STA013_Config.h"
  12          #include "Play_Song.h"
  13          #include "LCD_routines.h"
  14          #include "Directory_Functions_struct.h"
  15          #include "Read_Sector.h"
  16          
  17          uint8_t xdata buf1[512];
  18          uint8_t xdata buf2[512];
  19          
  20          
  21          
  22          // Private Function Prototypes
  23          //void Play_Song(uint32_t Start_Cluster);
  24          
  25          
  26          main()
  27          {
  28   1         uint32_t Current_directory, Entry_clus;
  29   1         uint16_t i, num_entries, entry_num;
  30   1         uint8_t error_flag,file_name[8],j,temp8;
  31   1         FS_values_t * Drive_p;
  32   1      
  33   1         AMBERLED=OFF;
  34   1         YELLOWLED=OFF;
  35   1         GREENLED=OFF;
  36   1         REDLED = ON;
  37   1         STA013_RESET=0;
  38   1         i=0;
  39   1         while(i<=60000) i++;
  40   1         REDLED = OFF;
  41   1         AUXR=0x0c;   // make all of XRAM available
  42   1         if(OSC_PER_INST==6)
  43   1         {
  44   2            CKCON0=0x01;  // set X2 clock mode
  45   2         }
  46   1         else if(OSC_PER_INST==12)
  47   1         {
  48   2            CKCON0=0x00;  // set standard clock mode
  49   2         } 
  50   1         uart_init();
  51   1         LCD_Init();
  52   1         printf("I2C Test Program\n\r\n\n");
  53   1         error_flag=SPI_Master_Init(400000UL);
  54   1         if(error_flag!=no_errors)
  55   1         {
C51 COMPILER V6.02  I2C_TEST                                                               12/14/2015 14:50:20 PAGE 2   

  56   2            REDLED=ON;
  57   2            while(1);
  58   2         }
  59   1         printf("SD Card Initialization ... \n\r");
  60   1         error_flag=SD_card_init();
  61   1         if(error_flag!=no_errors)
  62   1         {
  63   2            REDLED=ON;
  64   2            while(1);
  65   2         }
  66   1         error_flag=SPI_Master_Init(20000000UL);
  67   1         if(error_flag!=no_errors)
  68   1         {
  69   2            REDLED=ON;
  70   2            while(1);
  71   2         }
  72   1         for(i=0;i<512;i++)
  73   1         {
  74   2            buf1[i]=0xff;  // erase valout for debug
  75   2            buf2[i]=0xff;
  76   2         }
  77   1         error_flag=Mount_Drive(buf1);
  78   1         if(error_flag!=no_errors)
  79   1         {
  80   2            REDLED=ON;
  81   2            while(1);
  82   2         }
  83   1         Drive_p=Export_Drive_values();
  84   1         Current_directory=Drive_p->FirstRootDirSec;
  85   1         
  86   1         
  87   1      
  88   1          STA013_init();   
  89   1         // Main Loop
  90   1      
  91   1         while(1)
  92   1         {
  93   2         		i=0;
  94   2      		j=0;
  95   2             printf("Directory Sector = %lu\n\r",Current_directory);
  96   2             num_entries=Print_Directory(Current_directory, buf1);
  97   2      	   printf("Enter Selection = ");
  98   2        	   entry_num=(uint16_t)long_serial_input();
  99   2      	   
 100   2      
 101   2      
 102   2      	   if(entry_num<=num_entries)
 103   2      	   {
 104   3      	      Entry_clus=Read_Dir_Entry(Current_directory, entry_num, buf1);
 105   3      		  if(Entry_clus&directory_bit)
 106   3      		  {
 107   4      		     Entry_clus&=0x0FFFFFFF;
 108   4                   Current_directory=First_Sector(Entry_clus);
 109   4      		  }
 110   3       	      else
 111   3      		  {
 112   4      		  	error_flag=Read_Sector(Current_directory,512,buf1);
 113   4      
 114   4      			//print_memory(512,buf1);
 115   4      			 while(1)
 116   4      			 {
 117   5      				temp8=read8(0+i,buf1);  // read first byte to see if empty
C51 COMPILER V6.02  I2C_TEST                                                               12/14/2015 14:50:20 PAGE 3   

 118   5      	        	if((temp8==0x01)||(temp8==0x41))
 119   5      		    	{
 120   6        					j=j+1;
 121   6      					//printf("\n%d  %d",j,i);
 122   6      					i=i+32;
 123   6      					if(j==entry_num)
 124   6      					{
 125   7      						for(j=0;j<8;j++)
 126   7      			  			{
 127   8      			     		file_name[j]=read8(i+j-1,buf1);   // print the 8 byte name
 128   8      			  			}
 129   7      						break;
 130   7      					}
 131   6      				}
 132   5      				else
 133   5      				{
 134   6      					i=i+32;	
 135   6      				}
 136   5      			}
 137   4      		     //Open_File(Entry_clus, buf1);
 138   4      			 LCD_Write(COMMAND,line1+1);
 139   4      		  LCD_Print(12,file_name);	
 140   4      		  Play_Song(Entry_clus);
 141   4      		  }
 142   3      		  
 143   3      	   }
 144   2      	   else
 145   2      	   {
 146   3      	      printf("Invalid Selection\n\r");
 147   3      	   }  
 148   2         }
 149   1      } 
 150          
 151          /*
 152          
 153          void Timer0_ISR() interrupt Timer_0_Overflow
 154          {
 155          	TI0=0;
 156          	time_g++;*/
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    558    ----
   CONSTANT SIZE    =    115    ----
   XDATA SIZE       =   1024    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
